    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_passwords_pam_faillock_interval", "Set Interval For Counting Failed Password Attempts", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_passwords_pam_faillock_unlock_time", "Set Lockout Time for Failed Password Attempts", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_password_pam_dcredit", "Ensure PAM Enforces Password Requirements - Minimum Digit Characters", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_password_pam_lcredit", "Ensure PAM Enforces Password Requirements - Minimum Lowercase Characters", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_password_pam_minclass", "Ensure PAM Enforces Password Requirements - Minimum Different Categories", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_password_pam_minlen", "Ensure PAM Enforces Password Requirements - Minimum Length", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_password_pam_ocredit", "Ensure PAM Enforces Password Requirements - Minimum Special Characters", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_password_pam_retry", "Ensure PAM Enforces Password Requirements - Authentication Retry Prompts Permitted Per-Session", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_password_pam_ucredit", "Ensure PAM Enforces Password Requirements - Minimum Uppercase Characters", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_set_password_hashing_algorithm_logindefs", "Set Password Hashing Algorithm in /etc/login.defs", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_account_unique_id", "Ensure All Accounts on the System Have Unique User IDs", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_group_unique_id", "Ensure All Groups on the System Have Unique Group ID", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_group_unique_name", "Ensure All Groups on the System Have Unique Group Names", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_account_disable_post_pw_expiration", "Set Account Expiration Following Inactivity", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_account_unique_name", "Ensure All Accounts on the System Have Unique Names", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_ensure_shadow_group_empty", "Ensure shadow Group is Empty", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_maximum_age_login_defs", "Set Password Maximum Age", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_minimum_age_login_defs", "Set Password Minimum Age", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_password_set_max_life_existing", "Set Existing Passwords Maximum Age", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_password_set_min_life_existing", "Set Existing Passwords Minimum Age", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_password_warn_age_login_defs", "Set Password Warning Age", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_password_all_shadowed", "Verify All Account Password Hashes are Shadowed", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_password_last_change_is_in_past", "Ensure all users last password change date is in the past", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_gid_passwd_group_same", "All GIDs referenced in /etc/passwd must be defined in /etc/group", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_no_empty_passwords_etc_shadow", "Ensure There Are No Accounts With Blank or Null Passwords", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_no_forward_files", "Verify No .forward Files Exist", "general", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_no_netrc_files", "Verify No netrc Files Exist", "general", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_no_uid_except_zero", "Verify Only Root Has UID 0", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_root_gid_zero", "Verify Root Has A Primary GID 0", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_ensure_pam_wheel_group_empty", "Ensure the Group Used by pam_wheel.so Module Exists on System and is Empty", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_ensure_root_password_configured", "Ensure Authentication Required for Single User Mode", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_no_shelllogin_for_systemaccounts", "Ensure that System Accounts Do Not Run a Shell Upon Login", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_use_pam_wheel_group_for_su", "Enforce Usage of pam_wheel with Group Parameter for su Authentication", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_tmout", "Set Interactive Session Timeout", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_user_dot_group_ownership", "User Initialization Files Must Be Group-Owned By The Primary Group", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_user_dot_no_world_writable_programs", "User Initialization Files Must Not Run World-Writable Programs", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_user_dot_user_ownership", "User Initialization Files Must Be Owned By the Primary User", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_user_interactive_home_directory_exists", "All Interactive Users Home Directories Must Exist", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_groupownership_home_directories", "All Interactive User Home Directories Must Be Group-Owned By The Primary Group", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_ownership_home_directories", "All Interactive User Home Directories Must Be Owned By The Primary User", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_home_directories", "All Interactive User Home Directories Must Have mode 0750 Or Less Permissive", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_root_path_dirs_no_write", "Ensure that Root's Path Does Not Include World or Group-Writable Directories", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_root_path_no_dot", "Ensure that Root's Path Does Not Include Relative Paths or Null Directories", "general", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_umask_etc_bashrc", "Ensure the Default Bash Umask is Set Correctly", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_umask_etc_login_defs", "Ensure the Default Umask is Set Correctly in login.defs", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_umask_etc_profile", "Ensure the Default Umask is Set Correctly in /etc/profile", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_accounts_umask_interactive_users", "Ensure the Default Umask is Set Correctly For Interactive Users", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_directory_permissions_var_log_audit", "System Audit Logs Must Have Mode 0750 or Less Permissive", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_group_ownership_var_log_audit", "System Audit Logs Must Be Group Owned By Root", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_groupownership_audit_configuration", "Audit Configuration Files Must Be Owned By Group root", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_ownership_audit_configuration", "Audit Configuration Files Must Be Owned By Root", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_ownership_var_log_audit_stig", "System Audit Logs Must Be Owned By Root", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_var_log_audit", "System Audit Logs Must Have Mode 0640 or Less Permissive", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_package_apparmor_installed", "Ensure AppArmor is installed", "services", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_all_apparmor_profiles_in_enforce_complain_mode", "All AppArmor Profiles are in enforce or complain mode", "general", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_grub2_enable_apparmor", "Ensure AppArmor is enabled in the bootloader configuration", "boot", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_owner_grub2_cfg", "Verify /boot/grub/grub.cfg User Ownership", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_grub2_cfg", "Verify /boot/grub/grub.cfg Permissions", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_grub2_password", "Set Boot Loader Password in grub2", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_grub2_uefi_password", "Set the UEFI Boot Loader Password", "auth", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_package_rsyslog_installed", "Ensure rsyslog is Installed", "logging", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_service_rsyslog_enabled", "Enable rsyslog Service", "logging", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_rsyslog_filecreatemode", "Ensure rsyslog Default File Permissions Configured", "logging", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_package_systemd-journal-remote_installed", "Install systemd-journal-remote Package", "services", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_service_systemd-journald_enabled", "Enable systemd-journald Service", "logging", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_journald_compress", "Ensure journald is configured to compress large log files", "logging", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_journald_storage", "Ensure journald is configured to write log files to persistent disk", "logging", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_socket_systemd-journal-remote_disabled", "Disable systemd-journal-remote Socket", "general", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_rsyslog_nolisten", "Ensure rsyslog Does Not Accept Remote Messages Unless Acting As Log Server", "logging", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_rsyslog_remote_loghost", "Ensure Logs Sent To Remote Host", "logging", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_package_iptables_installed", "Install iptables Package", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_package_iptables-persistent_removed", "Remove iptables-persistent Package", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_set_ip6tables_default_rule", "Set Default ip6tables Policy for Incoming Packets", "general", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_set_ipv6_loopback_traffic", "Set configuration for IPv6 loopback traffic", "general", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_set_loopback_traffic", "Set configuration for loopback traffic", "general", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_ip6tables_rules_for_open_ports", "Ensure ip6tables Firewall Rules Exist for All Open Ports", "general", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_iptables_rules_for_open_ports", "Ensure iptables Firewall Rules Exist for All Open Ports", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_set_iptables_default_rule", "Set Default iptables Policy for Incoming Packets", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_ra", "Configure Accepting Router Advertisements on All IPv6 Interfaces", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_redirects", "Disable Accepting ICMP Redirects for All IPv6 Interfaces", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_source_route", "Disable Kernel Parameter for Accepting Source-Routed Packets on all IPv6 Interfaces", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_forwarding", "Disable Kernel Parameter for IPv6 Forwarding", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_ra", "Disable Accepting Router Advertisements on all IPv6 Interfaces by Default", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_redirects", "Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv6 Interfaces", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_source_route", "Disable Kernel Parameter for Accepting Source-Routed Packets on IPv6 Interfaces by Default", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_accept_redirects", "Disable Accepting ICMP Redirects for All IPv4 Interfaces", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_accept_source_route", "Disable Kernel Parameter for Accepting Source-Routed Packets on all IPv4 Interfaces", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_log_martians", "Enable Kernel Parameter to Log Martian Packets on all IPv4 Interfaces", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_rp_filter", "Enable Kernel Parameter to Use Reverse Path Filtering on all IPv4 Interfaces", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_secure_redirects", "Disable Kernel Parameter for Accepting Secure ICMP Redirects on all IPv4 Interfaces", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_accept_redirects", "Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv4 Interfaces", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_accept_source_route", "Disable Kernel Parameter for Accepting Source-Routed Packets on IPv4 Interfaces by Default", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_log_martians", "Enable Kernel Paremeter to Log Martian Packets on all IPv4 Interfaces by Default", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_rp_filter", "Enable Kernel Parameter to Use Reverse Path Filtering on all IPv4 Interfaces by Default", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_secure_redirects", "Configure Kernel Parameter for Accepting Secure Redirects By Default", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_icmp_echo_ignore_broadcasts", "Enable Kernel Parameter to Ignore ICMP Broadcast Echo Requests on IPv4 Interfaces", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_icmp_ignore_bogus_error_responses", "Enable Kernel Parameter to Ignore Bogus ICMP Error Responses on IPv4 Interfaces", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_tcp_syncookies", "Enable Kernel Parameter to Use TCP Syncookies on Network Interfaces", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_send_redirects", "Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_send_redirects", "Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces by Default", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_ip_forward", "Disable Kernel Parameter for IP Forwarding on IPv4 Interfaces", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_package_nftables_installed", "Install nftables Package", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_service_nftables_enabled", "Verify nftables Service is Enabled", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_nftables_ensure_default_deny_policy", "Ensure nftables Default Deny Firewall Policy", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_nftables_rules_permanent", "Ensure nftables Rules are Permanent", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_set_nftables_base_chain", "Ensure Base Chains Exist for Nftables", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_set_nftables_loopback_traffic", "Set nftables Configuration for Loopback Traffic", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_set_nftables_table", "Ensure a Table Exists for Nftables", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_package_ufw_removed", "Remove ufw Package", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_service_ufw_enabled", "Verify ufw Enabled", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_set_ufw_default_rule", "Ensure ufw Default Deny Firewall Policy", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_set_ufw_loopback_traffic", "Set UFW Loopback Traffic", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_ufw_rules_for_open_ports", "Ensure ufw Firewall Rules Exist for All Open Ports", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_wireless_disable_interfaces", "Deactivate Wireless Network Interfaces", "network", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_etc_audit_auditd", "Verify Permissions on /etc/audit/auditd.conf", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_etc_audit_rulesd", "Verify Permissions on /etc/audit/rules.d/*.rules", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_unauthorized_world_writable", "Ensure No World-Writable Files Exist", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_ungroupowned", "Ensure All Files Are Owned by a Group", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_no_files_unowned_by_user", "Ensure All Files Are Owned by a User", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_permissions_local_var_log", "Verify permissions of log files", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_groupowner_backup_etc_group", "Verify Group Who Owns Backup group File", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_groupowner_backup_etc_gshadow", "Verify Group Who Owns Backup gshadow File", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_groupowner_backup_etc_passwd", "Verify Group Who Owns Backup passwd File", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_groupowner_backup_etc_shadow", "Verify User Who Owns Backup shadow File", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_groupowner_etc_group", "Verify Group Who Owns group File", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_groupowner_etc_gshadow", "Verify Group Who Owns gshadow File", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_groupowner_etc_passwd", "Verify Group Who Owns passwd File", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_groupowner_etc_shadow", "Verify Group Who Owns shadow File", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_owner_backup_etc_group", "Verify User Who Owns Backup group File", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_owner_backup_etc_gshadow", "Verify User Who Owns Backup gshadow File", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_owner_backup_etc_passwd", "Verify User Who Owns Backup passwd File", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_owner_backup_etc_shadow", "Verify Group Who Owns Backup shadow File", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_owner_etc_group", "Verify User Who Owns group File", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_owner_etc_gshadow", "Verify User Who Owns gshadow File", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_owner_etc_passwd", "Verify User Who Owns passwd File", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_owner_etc_shadow", "Verify User Who Owns shadow File", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_backup_etc_group", "Verify Permissions on Backup group File", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_backup_etc_gshadow", "Verify Permissions on Backup gshadow File", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_backup_etc_passwd", "Verify Permissions on Backup passwd File", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_backup_etc_shadow", "Verify Permissions on Backup shadow File", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_etc_group", "Verify Permissions on group File", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_etc_gshadow", "Verify Permissions on gshadow File", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_etc_passwd", "Verify Permissions on passwd File", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_etc_shadow", "Verify Permissions on shadow File", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_groupownership_audit_binaries", "Verify that audit tools are owned by group root", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_ownership_audit_binaries", "Verify that audit tools are owned by root", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_audit_binaries", "Verify that audit tools Have Mode 0755 or less", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_service_autofs_disabled", "Disable the Automounter", "services", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_kernel_module_cramfs_disabled", "Disable Mounting of cramfs", "services", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_kernel_module_usb-storage_disabled", "Disable Modprobe Loading of USB Storage Driver", "services", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_dev_shm_nodev", "Add nodev Option to /dev/shm", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_dev_shm_noexec", "Add noexec Option to /dev/shm", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_dev_shm_nosuid", "Add nosuid Option to /dev/shm", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_home_nodev", "Add nodev Option to /home", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_home_nosuid", "Add nosuid Option to /home", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_tmp_nodev", "Add nodev Option to /tmp", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_tmp_noexec", "Add noexec Option to /tmp", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_tmp_nosuid", "Add nosuid Option to /tmp", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_var_log_audit_nodev", "Add nodev Option to /var/log/audit", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_var_log_audit_noexec", "Add noexec Option to /var/log/audit", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_var_log_audit_nosuid", "Add nosuid Option to /var/log/audit", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_var_log_nodev", "Add nodev Option to /var/log", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_var_log_noexec", "Add noexec Option to /var/log", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_var_log_nosuid", "Add nosuid Option to /var/log", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_var_nodev", "Add nodev Option to /var", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_var_nosuid", "Add nosuid Option to /var", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_var_tmp_nodev", "Add nodev Option to /var/tmp", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_var_tmp_noexec", "Add noexec Option to /var/tmp", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_mount_option_var_tmp_nosuid", "Add nosuid Option to /var/tmp", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_disable_users_coredumps", "Disable Core Dumps for All Users", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_fs_suid_dumpable", "Disable Core Dumps for SUID programs", "general", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_sysctl_kernel_randomize_va_space", "Enable Randomized Layout of Virtual Address Space", "general", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_service_apport_disabled", "Disable Apport Service", "services", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_package_avahi_removed", "Uninstall avahi Server Package", "services", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_service_avahi-daemon_disabled", "Disable Avahi Server Software", "services", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_service_cron_enabled", "Enable cron Service", "services", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_groupowner_cron_d", "Verify Group Who Owns cron.d", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_groupowner_cron_daily", "Verify Group Who Owns cron.daily", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_groupowner_cron_hourly", "Verify Group Who Owns cron.hourly", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_groupowner_cron_monthly", "Verify Group Who Owns cron.monthly", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_groupowner_cron_weekly", "Verify Group Who Owns cron.weekly", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_groupowner_crontab", "Verify Group Who Owns Crontab", "accounts", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_owner_cron_d", "Verify Owner on cron.d", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_owner_cron_daily", "Verify Owner on cron.daily", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_owner_cron_hourly", "Verify Owner on cron.hourly", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_owner_cron_monthly", "Verify Owner on cron.monthly", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_owner_cron_weekly", "Verify Owner on cron.weekly", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_owner_crontab", "Verify Owner on crontab", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_cron_d", "Verify Permissions on cron.d", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_cron_daily", "Verify Permissions on cron.daily", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_cron_hourly", "Verify Permissions on cron.hourly", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_cron_monthly", "Verify Permissions on cron.monthly", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_cron_weekly", "Verify Permissions on cron.weekly", "filesystem", "medium", check_not_implemented),
    RULE_DEF("xccdf_org.ssgproject.content_rule_file_permissions_crontab", "Verify Permissions on crontab", "filesystem", "medium", check_not_implemented),
