name: "SAST"

on:
  push:
    branches: [ "*" ]  
  pull_request:
    branches: [ "*" ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly Monday at 6 AM UTC
  workflow_dispatch:  
env:
  CARGO_TERM_COLOR: always

jobs:
  
  codeql:
    name: CodeQL Analysis (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: actions
          build-mode: none
        - language: python
          build-mode: none
        - language: rust
          build-mode: autobuild
        - language: javascript-typescript
          build-mode: none

    steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        queries: security-extended,security-and-quality

    - name: Setup Rust (for Rust analysis)
      if: matrix.language == 'rust'
      uses: actions-rust-lang/setup-rust-toolchain@v1.11.0
      with:
        components: rustfmt, clippy

    - name: Build Rust project
      if: matrix.language == 'rust'
      run: |
        cargo check
        cargo build --release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

 
  semgrep:
    name: Semgrep Security Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Setup Python
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b6 # v5.3.0
      with:
        python-version: '3.11'

    - name: Run Semgrep Security Scan
      uses: semgrep/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/r2c-security-audit
          p/r2c-best-practices
          p/supply-chain

    - name: Upload Semgrep results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: semgrep-results.sarif
      if: always()

 
  dependency-check:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1.11.0

    - name: Run cargo audit
      run: |
        cargo install cargo-audit
        cargo audit --format sarif --output cargo-audit.sarif || true

    - name: Upload cargo audit results
      uses: github/codeql-action/upload-sarif@v3.27.0
      with:
        sarif_file: cargo-audit.sarif
      if: always()

    - name: Check for Python dependencies
      id: python-deps
      run: |
        if [ -f "requirements.txt" ] || [ -f "pyproject.toml" ] || [ -f "Pipfile" ]; then
          echo "has-python=true" >> $GITHUB_OUTPUT
        else
          echo "has-python=false" >> $GITHUB_OUTPUT
        fi

    - name: Setup Python
      if: steps.python-deps.outputs.has-python == 'true'
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b6 # v5.3.0
      with:
        python-version: '3.11'

    - name: Run safety check for Python dependencies
      if: steps.python-deps.outputs.has-python == 'true'
      run: |
        pip install safety
        safety check --output sarif --save-as safety-results.sarif || true

    - name: Upload safety results
      uses: github/codeql-action/upload-sarif@v3.27.0
      with:
        sarif_file: safety-results.sarif

  # Summary Job
  summary:
    name: Security Scan Summary
    runs-on: ubuntu-latest
    needs: [codeql, semgrep, dependency-check]
    if: always()

    steps:
    - name: Generate Security Report
      run: |
        echo "# Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Job Status Summary" >> $GITHUB_STEP_SUMMARY
        echo "- CodeQL Analysis: ${{ needs.codeql.result == 'success' && '✅ Passed' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
        echo "- Semgrep Scan: ${{ needs.semgrep.result == 'success' && '✅ Passed' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
        echo "- Dependency Check: ${{ needs.dependency-check.result == 'success' && '✅ Passed' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Scan Coverage" >> $GITHUB_STEP_SUMMARY
        echo "- **Languages**: Rust, Python, JavaScript/TypeScript, GitHub Actions" >> $GITHUB_STEP_SUMMARY
        echo "- **Security Rules**: OWASP, CWE, SANS Top 25, Custom Rules" >> $GITHUB_STEP_SUMMARY
        echo "- **Dependency Scanning**: Cargo audit, Python safety" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Next Steps" >> $GITHUB_STEP_SUMMARY
        if [ "${{ needs.codeql.result }}" != "success" ] || [ "${{ needs.semgrep.result }}" != "success" ] || [ "${{ needs.dependency-check.result }}" != "success" ]; then
          echo " Some security scans failed. Please review the detailed results above and fix any critical issues." >> $GITHUB_STEP_SUMMARY
        else
          echo " All security scans passed! Your code looks secure." >> $GITHUB_STEP_SUMMARY
        fi
