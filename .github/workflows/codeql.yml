name: "SAST"

on:
  push:
    branches: [ "*" ]  
  pull_request:
    branches: [ "*" ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly Monday at 6 AM UTC
  workflow_dispatch:  
env:
  CARGO_TERM_COLOR: always

jobs:
  
  codeql:
    name: CodeQL Analysis (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: actions
          build-mode: none
        - language: python
          build-mode: none
        - language: rust
          build-mode: none

    steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        queries: security-extended,security-and-quality

    - name: Setup Rust (for Rust analysis)
      if: matrix.language == 'rust'
      uses: actions-rust-lang/setup-rust-toolchain@v1.11.0
      with:
        components: rustfmt, clippy

    - name: Build Rust project
      if: matrix.language == 'rust'
      run: |
        cargo check
        cargo build --release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  semgrep:
    name: Semgrep Security Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Setup Python
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b6 # v5.3.0
      with:
        python-version: '3.11'

     -name: Static Analysis
      runs-on: ubuntu-latest
      strategy:
        matrix:
        language: [rust, python]

      steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Rust toolchain
        if: matrix.language == 'rust'
        uses: actions-rust-lang/setup-rust-toolchain@v1.11.0
        with:
        components: rustfmt, clippy

      - name: Run cargo clippy
        if: matrix.language == 'rust'
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Setup Python
        if: matrix.language == 'python'
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b6 # v5.3.0
        with:
        python-version: '3.11'

      - name: Run Ruff static analysis
        if: matrix.language == 'python'
        run: |
        python -m pip install --upgrade pip
        pip install ruff
        ruff check .

      summary:
      name: Security Scan Summary
      runs-on: ubuntu-latest
      needs: [codeql, static-analysis]
      if: always()

      steps:
      - name: Generate Security Report
        run: |
        echo "# Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Job Status Summary" >> $GITHUB_STEP_SUMMARY
        echo "- CodeQL Analysis: ${{ needs.codeql.result == 'success' && '✅ Passed' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
        echo "- Static Analysis: ${{ needs.static-analysis.result == 'success' && '✅ Passed' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Scan Coverage" >> $GITHUB_STEP_SUMMARY
        echo "- **Languages**: Rust, Python" >> $GITHUB_STEP_SUMMARY
        echo "- **Tools**: CodeQL, cargo clippy, Ruff" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Next Steps" >> $GITHUB_STEP_SUMMARY
        if [ "${{ needs.codeql.result }}" != "success" ] || [ "${{ needs.static-analysis.result }}" != "success" ]; then
          echo " Some security scans failed. Please review the detailed results above and fix any critical issues." >> $GITHUB_STEP_SUMMARY
        else
          echo " All security scans passed! Your code looks secure." >> $GITHUB_STEP_SUMMARY
